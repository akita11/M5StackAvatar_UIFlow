{"category":"M5StickCAvatar","color":"#06e5c0","blocks":["__M5StickCAvatar_Start","__M5StickCAvatar_Speak","__M5StickCAvatar_Exclamation","__M5StickCAvatar_Pale","__M5StickCAvatar_Angry"],"jscode":"// Block __M5StickCAvatar_Start\nvar __M5StickCAvatar_Start_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Avatar_Start\"\n        }\n    ],\n    \"colour\": \"#06e5c0\"\n};\n\nwindow['Blockly'].Blocks['__M5StickCAvatar_Start'] = {\n    init: function() {\n        this.jsonInit(__M5StickCAvatar_Start_json);\n    }\n};\n\nwindow['Blockly'].Python['__M5StickCAvatar_Start'] = function(block) {\n        return `# M5StickCAvatar BLOCK\n# Based on M5StackAvatarPython : https://github.com/h-akanuma/M5StackAvatarPython\n# v1.0 (220801)\n# Copyright (c) 2022 @akita11, Released under the MIT license\n\nimport random\nimport math\nsetScreenColor(0x000000)\n#lcd.font(lcd.FONT_Default, 90)\n\nM5Avatar_fw, M5Avatar_fh = lcd.fontSize()\nM5Avatar_ww, M5Avatar_wh = lcd.screensize()\nM5Avatar_eye_x = 90\nM5Avatar_eye_y = 80\nM5Avatar_eye_r = 10\n#M5Avatar_eye_close_x= 70\nM5Avatar_eye_close_width  = 6\nM5Avatar_eye_close_height = 40\nM5Avatar_blink_term_ms    = 500\nM5Avatar_mouth_x = 40\nM5Avatar_mouth_y = 120\nM5Avatar_mouth_width = 7\nM5Avatar_mouth_height = 50\nM5Avatar_mouth_close = True\nM5Avatar_mouth_open_width = 30\nM5Avatar_exclamation_x = 60\nM5Avatar_exclamation_y = 220\nM5Avatar_exclamation_width  = 30\nM5Avatar_exclamation_height = 10\nM5Avatar_exclamation_space  = 8\nM5Avatar_angry_x = 110\nM5Avatar_angry_y = 210\nM5Avatar_angry_width = 2\nM5Avatar_angry_length = 10\nM5Avatar_angry_gap = 10\ntm_blink = 0\nst_blink = 0\ntm_mouth = 0\nst_mouth = 0\ntm_speak = 0\ntimerAvatar_period = 100\ntm_blink_open = random.randint(2, 6) * 1000\ntm_mouth_period = 500\nM5Avatar_spaces = ' '\nfSpeaking = False\n\nwhile lcd.textWidth(M5Avatar_spaces) < M5Avatar_ww:\n  M5Avatar_spaces += ' '\n\n@timerSch.event('timerAvatar')\ndef ttimerAvatar():\n  global tm_speak\n  _breath()\n  _blink()\n#  if fSpeaking == False:\n#    _mouth()\n  tm_speak = tm_speak + timerAvatar_period\n  pass\n\ndev = 0\nbreath_T = 0\nbreath_cycle = 30\nbreath_dev = 4\n\ndef _breath():\n  global dev, breath_T\n  breath_T = (breath_T + 1) % breath_cycle\n  dev = int(breath_dev * math.sin(breath_T * 2 * math.pi / breath_cycle))\n\ndef _blink():\n    global tm_blink, st_blink, tm_blink_open\n    tm_blink = tm_blink + timerAvatar_period\n    if st_blink == 0:\n      _eye_close()\n      if tm_blink >= M5Avatar_blink_term_ms:\n        st_blink = 1\n        tm_blink = 0\n    else:\n      _eye_open()\n      if tm_blink >= tm_blink_open:\n        tm_blink_open = random.randint(2, 6) * 1000\n        st_blink = 0\n        tm_blink = 0\n\ndef _eye_close():\n    lcd.circle(M5Avatar_eye_x + dev, M5Avatar_eye_y, M5Avatar_eye_r+10, lcd.BLACK, lcd.BLACK)\n    lcd.circle(M5Avatar_eye_x + dev, M5Avatar_wh - M5Avatar_eye_y, M5Avatar_eye_r+10, lcd.BLACK, lcd.BLACK)\n    lcd.rect(\n        M5Avatar_eye_x - M5Avatar_eye_close_width // 2 + dev,\n        M5Avatar_eye_y - M5Avatar_eye_close_height // 2, \n        M5Avatar_eye_close_width, M5Avatar_eye_close_height, lcd.WHITE, lcd.WHITE)\n    lcd.rect(\n        M5Avatar_eye_x - M5Avatar_eye_close_width // 2 + dev,\n        M5Avatar_wh - M5Avatar_eye_y - M5Avatar_eye_close_height // 2, \n        M5Avatar_eye_close_width, M5Avatar_eye_close_height,\n        lcd.WHITE, lcd.WHITE\n    )\n\ndef _eye_open():\n    lcd.rect(\n        M5Avatar_eye_x - M5Avatar_eye_close_width // 2 + dev - 10,\n        M5Avatar_eye_y - M5Avatar_eye_close_height // 2, \n        M5Avatar_eye_close_width + 20, M5Avatar_eye_close_height, lcd.BLACK, lcd.BLACK)\n    lcd.rect(\n        M5Avatar_eye_x - M5Avatar_eye_close_width // 2 + dev - 10,\n        M5Avatar_wh - M5Avatar_eye_y - M5Avatar_eye_close_height // 2, \n        M5Avatar_eye_close_width + 20, M5Avatar_eye_close_height,\n        lcd.BLACK, lcd.BLACK\n    )\n    lcd.circle(M5Avatar_eye_x + dev, M5Avatar_eye_y, M5Avatar_eye_r, lcd.WHITE, lcd.WHITE)\n    lcd.circle(M5Avatar_eye_x + dev, M5Avatar_wh - M5Avatar_eye_y, M5Avatar_eye_r, lcd.WHITE, lcd.WHITE)\n\ndef _mouth():\n  global tm_mouth\n  tm_mouth = tm_mouth + timerAvatar_period\n  if tm_mouth >= tm_mouth_period:\n    tm_mouth = 0\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_width // 2 + dev - 10,\n    M5Avatar_mouth_x - M5Avatar_mouth_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_width + 20,\n    M5Avatar_mouth_height,\n    lcd.BLACK,\n    lcd.BLACK\n  )\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_width // 2 + dev,\n    M5Avatar_mouth_x - M5Avatar_mouth_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_width,\n    M5Avatar_mouth_height,\n    lcd.WHITE,\n    lcd.WHITE\n  )\n\ndef _lipsync():\n  if M5Avatar_mouth_close:\n    _lip_open()\n  else:\n    _lip_close()\n\ndef _lip_close():\n  global M5Avatar_mouth_close\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2 + dev - 10,\n    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_open_width,\n    M5Avatar_mouth_height,\n    lcd.BLACK,\n    lcd.BLACK\n  )\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_width // 2 + dev,\n    M5Avatar_mouth_x - M5Avatar_mouth_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_width,\n    M5Avatar_mouth_height,\n    lcd.WHITE,\n    lcd.WHITE\n  )\n  M5Avatar_mouth_close = True\n\ndef _lip_open():\n  global M5Avatar_mouth_close\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2 + dev - 10,\n    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_open_width,\n    M5Avatar_mouth_height,\n    lcd.BLACK,\n    lcd.BLACK\n  )\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2 + dev,\n    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_open_width,\n    M5Avatar_mouth_height,\n    lcd.WHITE,\n    lcd.WHITE\n  )\n  M5Avatar_mouth_close = False\n\ndef _speak(text):\n  global tm_speak\n  global fSpeaking\n  fSpeaking = True\n#  lcd.setColor(lcd.BLACK, lcd.WHITE)\n#  lcd.arc((M5Avatar_eye_x + M5Avatar_mouth_x) // 2, (M5Avatar_wh - M5Avatar_fh) - 5, 25, 25, 270, 360, lcd.WHITE, lcd.WHITE)\n#  lcd.rect(0, (M5Avatar_wh - M5Avatar_fh) - 5, M5Avatar_ww + 5, M5Avatar_fh + 5, lcd.WHITE, lcd.WHITE)\n#  lcd.textClear(0, (M5Avatar_wh - M5Avatar_fh) - 1, M5Avatar_spaces, lcd.WHITE)\n#  lcd.print(text, 0, lcd.BOTTOM, lcd.BLACK)\n#  lcd.rect(0, 0, 24, M5Avatar_wh, lcd.WHITE, lcd.WHITE)\n  labelText = M5TextBox(24, 20, \"\", lcd.FONT_DejaVu24, 0xffffff, rotate=90)\n  labelText.setText(text)\n  _lipsync()\n  while tm_speak < 500:\n    pass\n  tm_speak = 0\n  while lcd.textWidth(text) > 0:\n    text = text[1:]\n#    lcd.textClear(0, (M5Avatar_wh - M5Avatar_fh) - 1, M5Avatar_spaces, lcd.WHITE)\n#    lcd.rect(0, 0, 24, M5Avatar_wh, lcd.WHITE, lcd.WHITE)\n    labelText.setText(text)\n    _lipsync()\n    while tm_speak < 500:\n      pass\n    tm_speak = 0\n#  lcd.rect(0, (M5Avatar_wh - M5Avatar_fh) - 5, M5Avatar_ww, M5Avatar_fh + 5, lcd.BLACK, lcd.BLACK)\n#  lcd.arc((M5Avatar_eye_x + M5Avatar_mouth_x) // 2, (M5Avatar_wh - M5Avatar_fh) - 5, 25, 25, 270, 360, lcd.BLACK, lcd.BLACK)\n  labelText.setText(\"\")\n  _lip_close()\n  fSpeaking = False\n\ndef _exclamation_color(color):\n  lcd.rect(\n    M5Avatar_exclamation_x,\n    M5Avatar_exclamation_y,\n    M5Avatar_exclamation_height,\n    M5Avatar_exclamation_height,\n    color,\n    color\n  )\n  lcd.rect(M5Avatar_exclamation_x + M5Avatar_exclamation_height + M5Avatar_exclamation_space, M5Avatar_exclamation_y, M5Avatar_exclamation_width, M5Avatar_exclamation_height, color, color)\n\ndef _pale_color(color):\n   lcd.rect(95, 220, 40, 5, color, color)\n   lcd.rect(90, 210, 45, 5, color, color)\n   lcd.rect(85, 200, 50, 5, color, color)\n   lcd.rect(80, 190, 55, 5, color, color)\n#  lcd.rect(40, 100, 5, 40, color, color)\n#  lcd.rect(60, 103, 5, 35, color, color)\n#  lcd.rect(80, 106, 5, 30, color, color)\n#  lcd.rect(100, 109, 5, 25, color, color)\n\ndef _angry_color(color):\n  lcd.rect( M5Avatar_angry_x - M5Avatar_angry_gap//2 - M5Avatar_angry_length, M5Avatar_angry_y - M5Avatar_angry_gap//2 - M5Avatar_angry_width,\n    M5Avatar_angry_length, M5Avatar_angry_width, color)\n  lcd.rect( M5Avatar_angry_x - M5Avatar_angry_gap//2 - M5Avatar_angry_width//2, M5Avatar_angry_y - M5Avatar_angry_gap//2 - M5Avatar_angry_length,\n    M5Avatar_angry_width, M5Avatar_angry_length, color)\n  lcd.rect( M5Avatar_angry_x + M5Avatar_angry_gap//2, M5Avatar_angry_y - M5Avatar_angry_gap//2 - M5Avatar_angry_width,\n    M5Avatar_angry_length, M5Avatar_angry_width, color)\n  lcd.rect( M5Avatar_angry_x + M5Avatar_angry_gap//2, M5Avatar_angry_y - M5Avatar_angry_gap//2 - M5Avatar_angry_width - M5Avatar_angry_length,\n    M5Avatar_angry_width, M5Avatar_angry_length, color)\n  lcd.rect( M5Avatar_angry_x - M5Avatar_angry_gap//2 - M5Avatar_angry_length, M5Avatar_angry_y + M5Avatar_angry_gap//2 - M5Avatar_angry_width,\n    M5Avatar_angry_length, M5Avatar_angry_width, color)\n  lcd.rect( M5Avatar_angry_x - M5Avatar_angry_gap//2 - M5Avatar_angry_width//2, M5Avatar_angry_y + M5Avatar_angry_gap//2,\n    M5Avatar_angry_width, M5Avatar_angry_length, color)\n  lcd.rect( M5Avatar_angry_x + M5Avatar_angry_gap//2, M5Avatar_angry_y + M5Avatar_angry_gap//2 - M5Avatar_angry_width,\n    M5Avatar_angry_length, M5Avatar_angry_width, color)\n  lcd.rect( M5Avatar_angry_x + M5Avatar_angry_gap//2, M5Avatar_angry_y + M5Avatar_angry_gap//2 - M5Avatar_angry_width,\n    M5Avatar_angry_width, M5Avatar_angry_length, color)\n\n_lip_close()\ntimerSch.setTimer('timerAvatar', timerAvatar_period, 0x00)\ntimerSch.run('timerAvatar', timerAvatar_period, 0x00)\ntm_blink_open = random.randint(2, 6) * 1000\n` + \"\\n\";\n};\n\n// Block __M5StickCAvatar_Speak\nvar __M5StickCAvatar_Speak_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Avatar_Speak\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Text\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"Text\"\n        }\n    ],\n    \"colour\": \"#06e5c0\"\n};\n\nwindow['Blockly'].Blocks['__M5StickCAvatar_Speak'] = {\n    init: function() {\n        this.jsonInit(__M5StickCAvatar_Speak_json);\n    }\n};\n\nwindow['Blockly'].Python['__M5StickCAvatar_Speak'] = function(block) {\n    var Text = Blockly.Python.valueToCode(block, 'Text', Blockly.Python.ORDER_NONE);\n    return `text = ${Text}\n_speak(text)` + \"\\n\";\n};\n\n// Block __M5StickCAvatar_Exclamation\nvar __M5StickCAvatar_Exclamation_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Avatar_Exclamation\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Mode\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"Mode\"\n        }\n    ],\n    \"colour\": \"#06e5c0\"\n};\n\nwindow['Blockly'].Blocks['__M5StickCAvatar_Exclamation'] = {\n    init: function() {\n        this.jsonInit(__M5StickCAvatar_Exclamation_json);\n    }\n};\n\nwindow['Blockly'].Python['__M5StickCAvatar_Exclamation'] = function(block) {\n    var Mode = Blockly.Python.valueToCode(block, 'Mode', Blockly.Python.ORDER_NONE);\n    return `if ${Mode} == 1:\n  _exclamation_color(lcd.RED)\nelse:\n  _exclamation_color(lcd.BLACK)\n` + \"\\n\";\n};\n\n// Block __M5StickCAvatar_Pale\nvar __M5StickCAvatar_Pale_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Avatar_Pale\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Mode\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"Mode\"\n        }\n    ],\n    \"colour\": \"#06e5c0\"\n};\n\nwindow['Blockly'].Blocks['__M5StickCAvatar_Pale'] = {\n    init: function() {\n        this.jsonInit(__M5StickCAvatar_Pale_json);\n    }\n};\n\nwindow['Blockly'].Python['__M5StickCAvatar_Pale'] = function(block) {\n    var Mode = Blockly.Python.valueToCode(block, 'Mode', Blockly.Python.ORDER_NONE);\n    return `if ${Mode} == 1:\n  _pale_color(lcd.BLUE)\nelse:\n  _pale_color(lcd.BLACK)\n` + \"\\n\";\n};\n\n// Block __M5StickCAvatar_Angry\nvar __M5StickCAvatar_Angry_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Avatar_Angry\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Mode\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"Mode\"\n        }\n    ],\n    \"colour\": \"#06e5c0\"\n};\n\nwindow['Blockly'].Blocks['__M5StickCAvatar_Angry'] = {\n    init: function() {\n        this.jsonInit(__M5StickCAvatar_Angry_json);\n    }\n};\n\nwindow['Blockly'].Python['__M5StickCAvatar_Angry'] = function(block) {\n    var Mode = Blockly.Python.valueToCode(block, 'Mode', Blockly.Python.ORDER_NONE);\n    return `if ${Mode} == 1:\n  _angry_color(lcd.RED)\nelse:\n  _angry_color(lcd.BLACK)\n` + \"\\n\";\n};\n\n","code":{"Start":["window['Blockly'].Python['__M5StickCAvatar_Start'] = function(block) {\n        return `# M5StickCAvatar BLOCK\n# Based on M5StackAvatarPython : https://github.com/h-akanuma/M5StackAvatarPython\n# v1.0 (220801)\n# Copyright (c) 2022 @akita11, Released under the MIT license\n\nimport random\nimport math\nsetScreenColor(0x000000)\n#lcd.font(lcd.FONT_Default, 90)\n\nM5Avatar_fw, M5Avatar_fh = lcd.fontSize()\nM5Avatar_ww, M5Avatar_wh = lcd.screensize()\nM5Avatar_eye_x = 90\nM5Avatar_eye_y = 80\nM5Avatar_eye_r = 10\n#M5Avatar_eye_close_x= 70\nM5Avatar_eye_close_width  = 6\nM5Avatar_eye_close_height = 40\nM5Avatar_blink_term_ms    = 500\nM5Avatar_mouth_x = 40\nM5Avatar_mouth_y = 120\nM5Avatar_mouth_width = 7\nM5Avatar_mouth_height = 50\nM5Avatar_mouth_close = True\nM5Avatar_mouth_open_width = 30\nM5Avatar_exclamation_x = 60\nM5Avatar_exclamation_y = 220\nM5Avatar_exclamation_width  = 30\nM5Avatar_exclamation_height = 10\nM5Avatar_exclamation_space  = 8\nM5Avatar_angry_x = 110\nM5Avatar_angry_y = 210\nM5Avatar_angry_width = 2\nM5Avatar_angry_length = 10\nM5Avatar_angry_gap = 10\ntm_blink = 0\nst_blink = 0\ntm_mouth = 0\nst_mouth = 0\ntm_speak = 0\ntimerAvatar_period = 100\ntm_blink_open = random.randint(2, 6) * 1000\ntm_mouth_period = 500\nM5Avatar_spaces = ' '\nfSpeaking = False\n\nwhile lcd.textWidth(M5Avatar_spaces) < M5Avatar_ww:\n  M5Avatar_spaces += ' '\n\n@timerSch.event('timerAvatar')\ndef ttimerAvatar():\n  global tm_speak\n  _breath()\n  _blink()\n#  if fSpeaking == False:\n#    _mouth()\n  tm_speak = tm_speak + timerAvatar_period\n  pass\n\ndev = 0\nbreath_T = 0\nbreath_cycle = 30\nbreath_dev = 4\n\ndef _breath():\n  global dev, breath_T\n  breath_T = (breath_T + 1) % breath_cycle\n  dev = int(breath_dev * math.sin(breath_T * 2 * math.pi / breath_cycle))\n\ndef _blink():\n    global tm_blink, st_blink, tm_blink_open\n    tm_blink = tm_blink + timerAvatar_period\n    if st_blink == 0:\n      _eye_close()\n      if tm_blink >= M5Avatar_blink_term_ms:\n        st_blink = 1\n        tm_blink = 0\n    else:\n      _eye_open()\n      if tm_blink >= tm_blink_open:\n        tm_blink_open = random.randint(2, 6) * 1000\n        st_blink = 0\n        tm_blink = 0\n\ndef _eye_close():\n    lcd.circle(M5Avatar_eye_x + dev, M5Avatar_eye_y, M5Avatar_eye_r+10, lcd.BLACK, lcd.BLACK)\n    lcd.circle(M5Avatar_eye_x + dev, M5Avatar_wh - M5Avatar_eye_y, M5Avatar_eye_r+10, lcd.BLACK, lcd.BLACK)\n    lcd.rect(\n        M5Avatar_eye_x - M5Avatar_eye_close_width // 2 + dev,\n        M5Avatar_eye_y - M5Avatar_eye_close_height // 2, \n        M5Avatar_eye_close_width, M5Avatar_eye_close_height, lcd.WHITE, lcd.WHITE)\n    lcd.rect(\n        M5Avatar_eye_x - M5Avatar_eye_close_width // 2 + dev,\n        M5Avatar_wh - M5Avatar_eye_y - M5Avatar_eye_close_height // 2, \n        M5Avatar_eye_close_width, M5Avatar_eye_close_height,\n        lcd.WHITE, lcd.WHITE\n    )\n\ndef _eye_open():\n    lcd.rect(\n        M5Avatar_eye_x - M5Avatar_eye_close_width // 2 + dev - 10,\n        M5Avatar_eye_y - M5Avatar_eye_close_height // 2, \n        M5Avatar_eye_close_width + 20, M5Avatar_eye_close_height, lcd.BLACK, lcd.BLACK)\n    lcd.rect(\n        M5Avatar_eye_x - M5Avatar_eye_close_width // 2 + dev - 10,\n        M5Avatar_wh - M5Avatar_eye_y - M5Avatar_eye_close_height // 2, \n        M5Avatar_eye_close_width + 20, M5Avatar_eye_close_height,\n        lcd.BLACK, lcd.BLACK\n    )\n    lcd.circle(M5Avatar_eye_x + dev, M5Avatar_eye_y, M5Avatar_eye_r, lcd.WHITE, lcd.WHITE)\n    lcd.circle(M5Avatar_eye_x + dev, M5Avatar_wh - M5Avatar_eye_y, M5Avatar_eye_r, lcd.WHITE, lcd.WHITE)\n\ndef _mouth():\n  global tm_mouth\n  tm_mouth = tm_mouth + timerAvatar_period\n  if tm_mouth >= tm_mouth_period:\n    tm_mouth = 0\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_width // 2 + dev - 10,\n    M5Avatar_mouth_x - M5Avatar_mouth_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_width + 20,\n    M5Avatar_mouth_height,\n    lcd.BLACK,\n    lcd.BLACK\n  )\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_width // 2 + dev,\n    M5Avatar_mouth_x - M5Avatar_mouth_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_width,\n    M5Avatar_mouth_height,\n    lcd.WHITE,\n    lcd.WHITE\n  )\n\ndef _lipsync():\n  if M5Avatar_mouth_close:\n    _lip_open()\n  else:\n    _lip_close()\n\ndef _lip_close():\n  global M5Avatar_mouth_close\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2 + dev - 10,\n    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_open_width,\n    M5Avatar_mouth_height,\n    lcd.BLACK,\n    lcd.BLACK\n  )\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_width // 2 + dev,\n    M5Avatar_mouth_x - M5Avatar_mouth_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_width,\n    M5Avatar_mouth_height,\n    lcd.WHITE,\n    lcd.WHITE\n  )\n  M5Avatar_mouth_close = True\n\ndef _lip_open():\n  global M5Avatar_mouth_close\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2 + dev - 10,\n    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_open_width,\n    M5Avatar_mouth_height,\n    lcd.BLACK,\n    lcd.BLACK\n  )\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2 + dev,\n    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_open_width,\n    M5Avatar_mouth_height,\n    lcd.WHITE,\n    lcd.WHITE\n  )\n  M5Avatar_mouth_close = False\n\ndef _speak(text):\n  global tm_speak\n  global fSpeaking\n  fSpeaking = True\n#  lcd.setColor(lcd.BLACK, lcd.WHITE)\n#  lcd.arc((M5Avatar_eye_x + M5Avatar_mouth_x) // 2, (M5Avatar_wh - M5Avatar_fh) - 5, 25, 25, 270, 360, lcd.WHITE, lcd.WHITE)\n#  lcd.rect(0, (M5Avatar_wh - M5Avatar_fh) - 5, M5Avatar_ww + 5, M5Avatar_fh + 5, lcd.WHITE, lcd.WHITE)\n#  lcd.textClear(0, (M5Avatar_wh - M5Avatar_fh) - 1, M5Avatar_spaces, lcd.WHITE)\n#  lcd.print(text, 0, lcd.BOTTOM, lcd.BLACK)\n#  lcd.rect(0, 0, 24, M5Avatar_wh, lcd.WHITE, lcd.WHITE)\n  labelText = M5TextBox(24, 20, \"\", lcd.FONT_DejaVu24, 0xffffff, rotate=90)\n  labelText.setText(text)\n  _lipsync()\n  while tm_speak < 500:\n    pass\n  tm_speak = 0\n  while lcd.textWidth(text) > 0:\n    text = text[1:]\n#    lcd.textClear(0, (M5Avatar_wh - M5Avatar_fh) - 1, M5Avatar_spaces, lcd.WHITE)\n#    lcd.rect(0, 0, 24, M5Avatar_wh, lcd.WHITE, lcd.WHITE)\n    labelText.setText(text)\n    _lipsync()\n    while tm_speak < 500:\n      pass\n    tm_speak = 0\n#  lcd.rect(0, (M5Avatar_wh - M5Avatar_fh) - 5, M5Avatar_ww, M5Avatar_fh + 5, lcd.BLACK, lcd.BLACK)\n#  lcd.arc((M5Avatar_eye_x + M5Avatar_mouth_x) // 2, (M5Avatar_wh - M5Avatar_fh) - 5, 25, 25, 270, 360, lcd.BLACK, lcd.BLACK)\n  labelText.setText(\"\")\n  _lip_close()\n  fSpeaking = False\n\ndef _exclamation_color(color):\n  lcd.rect(\n    M5Avatar_exclamation_x,\n    M5Avatar_exclamation_y,\n    M5Avatar_exclamation_height,\n    M5Avatar_exclamation_height,\n    color,\n    color\n  )\n  lcd.rect(M5Avatar_exclamation_x + M5Avatar_exclamation_height + M5Avatar_exclamation_space, M5Avatar_exclamation_y, M5Avatar_exclamation_width, M5Avatar_exclamation_height, color, color)\n\ndef _pale_color(color):\n   lcd.rect(95, 220, 40, 5, color, color)\n   lcd.rect(90, 210, 45, 5, color, color)\n   lcd.rect(85, 200, 50, 5, color, color)\n   lcd.rect(80, 190, 55, 5, color, color)\n#  lcd.rect(40, 100, 5, 40, color, color)\n#  lcd.rect(60, 103, 5, 35, color, color)\n#  lcd.rect(80, 106, 5, 30, color, color)\n#  lcd.rect(100, 109, 5, 25, color, color)\n\ndef _angry_color(color):\n  lcd.rect( M5Avatar_angry_x - M5Avatar_angry_gap//2 - M5Avatar_angry_length, M5Avatar_angry_y - M5Avatar_angry_gap//2 - M5Avatar_angry_width,\n    M5Avatar_angry_length, M5Avatar_angry_width, color)\n  lcd.rect( M5Avatar_angry_x - M5Avatar_angry_gap//2 - M5Avatar_angry_width//2, M5Avatar_angry_y - M5Avatar_angry_gap//2 - M5Avatar_angry_length,\n    M5Avatar_angry_width, M5Avatar_angry_length, color)\n  lcd.rect( M5Avatar_angry_x + M5Avatar_angry_gap//2, M5Avatar_angry_y - M5Avatar_angry_gap//2 - M5Avatar_angry_width,\n    M5Avatar_angry_length, M5Avatar_angry_width, color)\n  lcd.rect( M5Avatar_angry_x + M5Avatar_angry_gap//2, M5Avatar_angry_y - M5Avatar_angry_gap//2 - M5Avatar_angry_width - M5Avatar_angry_length,\n    M5Avatar_angry_width, M5Avatar_angry_length, color)\n  lcd.rect( M5Avatar_angry_x - M5Avatar_angry_gap//2 - M5Avatar_angry_length, M5Avatar_angry_y + M5Avatar_angry_gap//2 - M5Avatar_angry_width,\n    M5Avatar_angry_length, M5Avatar_angry_width, color)\n  lcd.rect( M5Avatar_angry_x - M5Avatar_angry_gap//2 - M5Avatar_angry_width//2, M5Avatar_angry_y + M5Avatar_angry_gap//2,\n    M5Avatar_angry_width, M5Avatar_angry_length, color)\n  lcd.rect( M5Avatar_angry_x + M5Avatar_angry_gap//2, M5Avatar_angry_y + M5Avatar_angry_gap//2 - M5Avatar_angry_width,\n    M5Avatar_angry_length, M5Avatar_angry_width, color)\n  lcd.rect( M5Avatar_angry_x + M5Avatar_angry_gap//2, M5Avatar_angry_y + M5Avatar_angry_gap//2 - M5Avatar_angry_width,\n    M5Avatar_angry_width, M5Avatar_angry_length, color)\n\n_lip_close()\ntimerSch.setTimer('timerAvatar', timerAvatar_period, 0x00)\ntimerSch.run('timerAvatar', timerAvatar_period, 0x00)\ntm_blink_open = random.randint(2, 6) * 1000\n` + \"\\n\";\n};\n\n","# M5StickCAvatar BLOCK\n# Based on M5StackAvatarPython : https://github.com/h-akanuma/M5StackAvatarPython\n# v1.0 (220801)\n# Copyright (c) 2022 @akita11, Released under the MIT license\n\nimport random\nimport math\nsetScreenColor(0x000000)\n#lcd.font(lcd.FONT_Default, 90)\n\nM5Avatar_fw, M5Avatar_fh = lcd.fontSize()\nM5Avatar_ww, M5Avatar_wh = lcd.screensize()\nM5Avatar_eye_x = 90\nM5Avatar_eye_y = 80\nM5Avatar_eye_r = 10\n#M5Avatar_eye_close_x= 70\nM5Avatar_eye_close_width  = 6\nM5Avatar_eye_close_height = 40\nM5Avatar_blink_term_ms    = 500\nM5Avatar_mouth_x = 40\nM5Avatar_mouth_y = 120\nM5Avatar_mouth_width = 7\nM5Avatar_mouth_height = 50\nM5Avatar_mouth_close = True\nM5Avatar_mouth_open_width = 30\nM5Avatar_exclamation_x = 60\nM5Avatar_exclamation_y = 220\nM5Avatar_exclamation_width  = 30\nM5Avatar_exclamation_height = 10\nM5Avatar_exclamation_space  = 8\nM5Avatar_angry_x = 110\nM5Avatar_angry_y = 210\nM5Avatar_angry_width = 2\nM5Avatar_angry_length = 10\nM5Avatar_angry_gap = 10\ntm_blink = 0\nst_blink = 0\ntm_mouth = 0\nst_mouth = 0\ntm_speak = 0\ntimerAvatar_period = 100\ntm_blink_open = random.randint(2, 6) * 1000\ntm_mouth_period = 500\nM5Avatar_spaces = ' '\nfSpeaking = False\n\nwhile lcd.textWidth(M5Avatar_spaces) < M5Avatar_ww:\n  M5Avatar_spaces += ' '\n\n@timerSch.event('timerAvatar')\ndef ttimerAvatar():\n  global tm_speak\n  _breath()\n  _blink()\n#  if fSpeaking == False:\n#    _mouth()\n  tm_speak = tm_speak + timerAvatar_period\n  pass\n\ndev = 0\nbreath_T = 0\nbreath_cycle = 30\nbreath_dev = 4\n\ndef _breath():\n  global dev, breath_T\n  breath_T = (breath_T + 1) % breath_cycle\n  dev = int(breath_dev * math.sin(breath_T * 2 * math.pi / breath_cycle))\n\ndef _blink():\n    global tm_blink, st_blink, tm_blink_open\n    tm_blink = tm_blink + timerAvatar_period\n    if st_blink == 0:\n      _eye_close()\n      if tm_blink >= M5Avatar_blink_term_ms:\n        st_blink = 1\n        tm_blink = 0\n    else:\n      _eye_open()\n      if tm_blink >= tm_blink_open:\n        tm_blink_open = random.randint(2, 6) * 1000\n        st_blink = 0\n        tm_blink = 0\n\ndef _eye_close():\n    lcd.circle(M5Avatar_eye_x + dev, M5Avatar_eye_y, M5Avatar_eye_r+10, lcd.BLACK, lcd.BLACK)\n    lcd.circle(M5Avatar_eye_x + dev, M5Avatar_wh - M5Avatar_eye_y, M5Avatar_eye_r+10, lcd.BLACK, lcd.BLACK)\n    lcd.rect(\n        M5Avatar_eye_x - M5Avatar_eye_close_width // 2 + dev,\n        M5Avatar_eye_y - M5Avatar_eye_close_height // 2, \n        M5Avatar_eye_close_width, M5Avatar_eye_close_height, lcd.WHITE, lcd.WHITE)\n    lcd.rect(\n        M5Avatar_eye_x - M5Avatar_eye_close_width // 2 + dev,\n        M5Avatar_wh - M5Avatar_eye_y - M5Avatar_eye_close_height // 2, \n        M5Avatar_eye_close_width, M5Avatar_eye_close_height,\n        lcd.WHITE, lcd.WHITE\n    )\n\ndef _eye_open():\n    lcd.rect(\n        M5Avatar_eye_x - M5Avatar_eye_close_width // 2 + dev - 10,\n        M5Avatar_eye_y - M5Avatar_eye_close_height // 2, \n        M5Avatar_eye_close_width + 20, M5Avatar_eye_close_height, lcd.BLACK, lcd.BLACK)\n    lcd.rect(\n        M5Avatar_eye_x - M5Avatar_eye_close_width // 2 + dev - 10,\n        M5Avatar_wh - M5Avatar_eye_y - M5Avatar_eye_close_height // 2, \n        M5Avatar_eye_close_width + 20, M5Avatar_eye_close_height,\n        lcd.BLACK, lcd.BLACK\n    )\n    lcd.circle(M5Avatar_eye_x + dev, M5Avatar_eye_y, M5Avatar_eye_r, lcd.WHITE, lcd.WHITE)\n    lcd.circle(M5Avatar_eye_x + dev, M5Avatar_wh - M5Avatar_eye_y, M5Avatar_eye_r, lcd.WHITE, lcd.WHITE)\n\ndef _mouth():\n  global tm_mouth\n  tm_mouth = tm_mouth + timerAvatar_period\n  if tm_mouth >= tm_mouth_period:\n    tm_mouth = 0\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_width // 2 + dev - 10,\n    M5Avatar_mouth_x - M5Avatar_mouth_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_width + 20,\n    M5Avatar_mouth_height,\n    lcd.BLACK,\n    lcd.BLACK\n  )\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_width // 2 + dev,\n    M5Avatar_mouth_x - M5Avatar_mouth_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_width,\n    M5Avatar_mouth_height,\n    lcd.WHITE,\n    lcd.WHITE\n  )\n\ndef _lipsync():\n  if M5Avatar_mouth_close:\n    _lip_open()\n  else:\n    _lip_close()\n\ndef _lip_close():\n  global M5Avatar_mouth_close\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2 + dev - 10,\n    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_open_width,\n    M5Avatar_mouth_height,\n    lcd.BLACK,\n    lcd.BLACK\n  )\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_width // 2 + dev,\n    M5Avatar_mouth_x - M5Avatar_mouth_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_width,\n    M5Avatar_mouth_height,\n    lcd.WHITE,\n    lcd.WHITE\n  )\n  M5Avatar_mouth_close = True\n\ndef _lip_open():\n  global M5Avatar_mouth_close\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2 + dev - 10,\n    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_open_width,\n    M5Avatar_mouth_height,\n    lcd.BLACK,\n    lcd.BLACK\n  )\n  lcd.rect(\n#    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2 + dev,\n    M5Avatar_mouth_x - M5Avatar_mouth_open_width // 2,\n    M5Avatar_mouth_y - M5Avatar_mouth_height // 2,\n    M5Avatar_mouth_open_width,\n    M5Avatar_mouth_height,\n    lcd.WHITE,\n    lcd.WHITE\n  )\n  M5Avatar_mouth_close = False\n\ndef _speak(text):\n  global tm_speak\n  global fSpeaking\n  fSpeaking = True\n#  lcd.setColor(lcd.BLACK, lcd.WHITE)\n#  lcd.arc((M5Avatar_eye_x + M5Avatar_mouth_x) // 2, (M5Avatar_wh - M5Avatar_fh) - 5, 25, 25, 270, 360, lcd.WHITE, lcd.WHITE)\n#  lcd.rect(0, (M5Avatar_wh - M5Avatar_fh) - 5, M5Avatar_ww + 5, M5Avatar_fh + 5, lcd.WHITE, lcd.WHITE)\n#  lcd.textClear(0, (M5Avatar_wh - M5Avatar_fh) - 1, M5Avatar_spaces, lcd.WHITE)\n#  lcd.print(text, 0, lcd.BOTTOM, lcd.BLACK)\n#  lcd.rect(0, 0, 24, M5Avatar_wh, lcd.WHITE, lcd.WHITE)\n  labelText = M5TextBox(24, 20, \"\", lcd.FONT_DejaVu24, 0xffffff, rotate=90)\n  labelText.setText(text)\n  _lipsync()\n  while tm_speak < 500:\n    pass\n  tm_speak = 0\n  while lcd.textWidth(text) > 0:\n    text = text[1:]\n#    lcd.textClear(0, (M5Avatar_wh - M5Avatar_fh) - 1, M5Avatar_spaces, lcd.WHITE)\n#    lcd.rect(0, 0, 24, M5Avatar_wh, lcd.WHITE, lcd.WHITE)\n    labelText.setText(text)\n    _lipsync()\n    while tm_speak < 500:\n      pass\n    tm_speak = 0\n#  lcd.rect(0, (M5Avatar_wh - M5Avatar_fh) - 5, M5Avatar_ww, M5Avatar_fh + 5, lcd.BLACK, lcd.BLACK)\n#  lcd.arc((M5Avatar_eye_x + M5Avatar_mouth_x) // 2, (M5Avatar_wh - M5Avatar_fh) - 5, 25, 25, 270, 360, lcd.BLACK, lcd.BLACK)\n  labelText.setText(\"\")\n  _lip_close()\n  fSpeaking = False\n\ndef _exclamation_color(color):\n  lcd.rect(\n    M5Avatar_exclamation_x,\n    M5Avatar_exclamation_y,\n    M5Avatar_exclamation_height,\n    M5Avatar_exclamation_height,\n    color,\n    color\n  )\n  lcd.rect(M5Avatar_exclamation_x + M5Avatar_exclamation_height + M5Avatar_exclamation_space, M5Avatar_exclamation_y, M5Avatar_exclamation_width, M5Avatar_exclamation_height, color, color)\n\ndef _pale_color(color):\n   lcd.rect(95, 220, 40, 5, color, color)\n   lcd.rect(90, 210, 45, 5, color, color)\n   lcd.rect(85, 200, 50, 5, color, color)\n   lcd.rect(80, 190, 55, 5, color, color)\n#  lcd.rect(40, 100, 5, 40, color, color)\n#  lcd.rect(60, 103, 5, 35, color, color)\n#  lcd.rect(80, 106, 5, 30, color, color)\n#  lcd.rect(100, 109, 5, 25, color, color)\n\ndef _angry_color(color):\n  lcd.rect( M5Avatar_angry_x - M5Avatar_angry_gap//2 - M5Avatar_angry_length, M5Avatar_angry_y - M5Avatar_angry_gap//2 - M5Avatar_angry_width,\n    M5Avatar_angry_length, M5Avatar_angry_width, color)\n  lcd.rect( M5Avatar_angry_x - M5Avatar_angry_gap//2 - M5Avatar_angry_width//2, M5Avatar_angry_y - M5Avatar_angry_gap//2 - M5Avatar_angry_length,\n    M5Avatar_angry_width, M5Avatar_angry_length, color)\n  lcd.rect( M5Avatar_angry_x + M5Avatar_angry_gap//2, M5Avatar_angry_y - M5Avatar_angry_gap//2 - M5Avatar_angry_width,\n    M5Avatar_angry_length, M5Avatar_angry_width, color)\n  lcd.rect( M5Avatar_angry_x + M5Avatar_angry_gap//2, M5Avatar_angry_y - M5Avatar_angry_gap//2 - M5Avatar_angry_width - M5Avatar_angry_length,\n    M5Avatar_angry_width, M5Avatar_angry_length, color)\n  lcd.rect( M5Avatar_angry_x - M5Avatar_angry_gap//2 - M5Avatar_angry_length, M5Avatar_angry_y + M5Avatar_angry_gap//2 - M5Avatar_angry_width,\n    M5Avatar_angry_length, M5Avatar_angry_width, color)\n  lcd.rect( M5Avatar_angry_x - M5Avatar_angry_gap//2 - M5Avatar_angry_width//2, M5Avatar_angry_y + M5Avatar_angry_gap//2,\n    M5Avatar_angry_width, M5Avatar_angry_length, color)\n  lcd.rect( M5Avatar_angry_x + M5Avatar_angry_gap//2, M5Avatar_angry_y + M5Avatar_angry_gap//2 - M5Avatar_angry_width,\n    M5Avatar_angry_length, M5Avatar_angry_width, color)\n  lcd.rect( M5Avatar_angry_x + M5Avatar_angry_gap//2, M5Avatar_angry_y + M5Avatar_angry_gap//2 - M5Avatar_angry_width,\n    M5Avatar_angry_width, M5Avatar_angry_length, color)\n\n_lip_close()\ntimerSch.setTimer('timerAvatar', timerAvatar_period, 0x00)\ntimerSch.run('timerAvatar', timerAvatar_period, 0x00)\ntm_blink_open = random.randint(2, 6) * 1000\n"],"Speak":["window['Blockly'].Python['__M5StickCAvatar_Speak'] = function(block) {\n    var Text = Blockly.Python.valueToCode(block, 'Text', Blockly.Python.ORDER_NONE);\n    return `text = ${Text}\n_speak(text)` + \"\\n\";\n};\n\n","text = ${Text}\n_speak(text)"],"Exclamation":["window['Blockly'].Python['__M5StickCAvatar_Exclamation'] = function(block) {\n    var Mode = Blockly.Python.valueToCode(block, 'Mode', Blockly.Python.ORDER_NONE);\n    return `if ${Mode} == 1:\n  _exclamation_color(lcd.RED)\nelse:\n  _exclamation_color(lcd.BLACK)\n` + \"\\n\";\n};\n\n","if ${Mode} == 1:\n  _exclamation_color(lcd.RED)\nelse:\n  _exclamation_color(lcd.BLACK)\n"],"Pale":["window['Blockly'].Python['__M5StickCAvatar_Pale'] = function(block) {\n    var Mode = Blockly.Python.valueToCode(block, 'Mode', Blockly.Python.ORDER_NONE);\n    return `if ${Mode} == 1:\n  _pale_color(lcd.BLUE)\nelse:\n  _pale_color(lcd.BLACK)\n` + \"\\n\";\n};\n\n","if ${Mode} == 1:\n  _pale_color(lcd.BLUE)\nelse:\n  _pale_color(lcd.BLACK)\n"],"Angry":["window['Blockly'].Python['__M5StickCAvatar_Angry'] = function(block) {\n    var Mode = Blockly.Python.valueToCode(block, 'Mode', Blockly.Python.ORDER_NONE);\n    return `if ${Mode} == 1:\n  _angry_color(lcd.RED)\nelse:\n  _angry_color(lcd.BLACK)\n` + \"\\n\";\n};\n\n","if ${Mode} == 1:\n  _angry_color(lcd.RED)\nelse:\n  _angry_color(lcd.BLACK)\n"]}}